// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package bimux

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Flag int32

const (
	Flag_request  Flag = 0
	Flag_response Flag = 1
	Flag_oneway   Flag = 2
)

var Flag_name = map[int32]string{
	0: "request",
	1: "response",
	2: "oneway",
}
var Flag_value = map[string]int32{
	"request":  0,
	"response": 1,
	"oneway":   2,
}

func (x Flag) String() string {
	return proto.EnumName(Flag_name, int32(x))
}
func (Flag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_a26a24eaecb22bb0, []int{0}
}

type Message struct {
	Number               uint64   `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Flag                 Flag     `protobuf:"varint,2,opt,name=flag,enum=bimux.Flag" json:"flag,omitempty"`
	Route                int32    `protobuf:"varint,3,opt,name=route" json:"route,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_a26a24eaecb22bb0, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Message) GetFlag() Flag {
	if m != nil {
		return m.Flag
	}
	return Flag_request
}

func (m *Message) GetRoute() int32 {
	if m != nil {
		return m.Route
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "bimux.Message")
	proto.RegisterEnum("bimux.Flag", Flag_name, Flag_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_a26a24eaecb22bb0) }

var fileDescriptor_message_a26a24eaecb22bb0 = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0xcd, 0x8a, 0xc2, 0x30,
	0x14, 0x85, 0x27, 0x9d, 0xb4, 0x1d, 0x6e, 0x3b, 0x43, 0xb9, 0x0c, 0x92, 0x9d, 0xc1, 0x55, 0x10,
	0xec, 0x42, 0xdf, 0xc1, 0x9d, 0x9b, 0xbc, 0x41, 0x8a, 0xd7, 0x22, 0xb4, 0x4d, 0xcd, 0x0f, 0xea,
	0xdb, 0x8b, 0xa9, 0xbb, 0xf3, 0x9d, 0xc3, 0x07, 0x07, 0x7e, 0x47, 0xf2, 0xde, 0xf4, 0xd4, 0xce,
	0xce, 0x06, 0x8b, 0x79, 0x77, 0x1d, 0xe3, 0x63, 0x33, 0x40, 0x79, 0x5a, 0x7a, 0x5c, 0x41, 0x31,
	0xc5, 0xb1, 0x23, 0x27, 0x98, 0x64, 0x8a, 0xeb, 0x0f, 0xe1, 0x1a, 0xf8, 0x65, 0x30, 0xbd, 0xc8,
	0x24, 0x53, 0x7f, 0xfb, 0xaa, 0x4d, 0x62, 0x7b, 0x1c, 0x4c, 0xaf, 0xd3, 0x80, 0xff, 0x90, 0x3b,
	0x1b, 0x03, 0x89, 0x6f, 0xc9, 0x54, 0xae, 0x17, 0x40, 0x04, 0x7e, 0x36, 0xc1, 0x08, 0x2e, 0x99,
	0xaa, 0x75, 0xca, 0xdb, 0x1d, 0xf0, 0xb7, 0x87, 0x15, 0x94, 0x8e, 0x6e, 0x91, 0x7c, 0x68, 0xbe,
	0xb0, 0x86, 0x1f, 0x47, 0x7e, 0xb6, 0x93, 0xa7, 0x86, 0x21, 0x40, 0x61, 0x27, 0xba, 0x9b, 0x67,
	0x93, 0x75, 0x45, 0xba, 0x7a, 0x78, 0x05, 0x00, 0x00, 0xff, 0xff, 0x58, 0x0e, 0xc6, 0x9a, 0xbb,
	0x00, 0x00, 0x00,
}
